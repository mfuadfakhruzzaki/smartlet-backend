# Database Configuration (Docker Compose)
DB_HOST=postgres
DB_PORT=5432
DB_USER=postgres
DB_PASSWORD=password
DB_NAME=swiflet_db
DB_SSLMODE=disable

# TimescaleDB Configuration (Docker Compose)
TIMESCALE_HOST=timescaledb
TIMESCALE_PORT=5432
TIMESCALE_USER=postgres
TIMESCALE_PASSWORD=password
TIMESCALE_DB=swiflet_timeseries
TIMESCALE_SSLMODE=disable

# JWT Configuration
JWT_SECRET=super-secret-jwt-key-for-development
JWT_EXPIRY=24h

# Server Configuration
SERVER_PORT=8080
SERVER_HOST=0.0.0.0
GIN_MODE=debug

# MQTT Configuration (Docker Compose)
MQTT_BROKER=tcp://mosquitto:1883
MQTT_CLIENT_ID=swiflet-backend
MQTT_USERNAME=
MQTT_PASSWORD=
MQTT_TOPIC_SENSOR=sensors/+/data
MQTT_TOPIC_CONTROL=control/+/command

# Redis Configuration (Docker Compose)
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# S3 Configuration
# IMPORTANT: Configure one of the following options for file upload to work

# Option 1: AWS S3 (Production)
# S3_ACCESS_KEY=your-aws-access-key-id
# S3_SECRET_KEY=your-aws-secret-access-key
# S3_BUCKET=your-s3-bucket-name
# S3_REGION=us-east-1
# S3_ENDPOINT=

# Option 2: MinIO (Local Development)
# S3_ACCESS_KEY=minioadmin
# S3_SECRET_KEY=minioadmin
# S3_BUCKET=swiflet-storage
# S3_REGION=us-east-1
# S3_ENDPOINT=http://localhost:9000

# Option 3: Placeholder (For testing API without actual file storage)
# WARNING: This will cause upload endpoints to fail, but other endpoints will work
S3_ACCESS_KEY=
S3_SECRET_KEY=
S3_BUCKET=swiflet-storage
S3_REGION=us-east-1
S3_ENDPOINT=